spring:
  application:
    name: channel-gateway

  profiles:
    active: local

  cloud:
    config:
      fail-fast: true
      allow-override: true
      username: user
      password: user

    gateway:
      httpserver:
        wiretap: false # debugging = true
      httpclient:
        connect-timeout: 3_000
        response-timeout: 5
        pool:
          type: elastic
          max-idle-time: 60s
          acquire-timeout: 45_000
        compression: true
        ssl:
          handshake-timeout: 10s
          close-notify-flush-timeout: 3s
          close-notify-read-timeout: 10s
        wiretap: false # debugging = true

      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOriginPatterns: '*'
            allowCredentials: true
            allowedHeaders: '*'
            allowedMethods:
              - GET
              - POST
              - HEAD
              - OPTIONS

      default-filters:
#        - RemoveHttpHeadersFilter
#        - HeaderFilter

    security:
      user:
        name: user
        password: user_dev

    endpoint:
      health:
        enabled: true
        show-details: never
      refresh:
        enabled: true
    tracing:
      enabled: true
      sampling:
        probability: 1.0
      propagation:
        type: w3c

logging:
  config: classpath:logback-spring.xml
  level:
    org.springframework.cloud.gateway: INFO
    org.springframework.http.server.reactive: INFO
    org.springframework.web.reactive: INFO
    org.springframework.boot.autoconfigure.web: INFO
    reactor.netty: INFO

management:
  tracing:
    baggage:
      correlation:
        fields:
          - uri
          - svc_nation_cd
          - appNo
          - contexturl
          - useragent
          - postion
          - location
          - targetserver
          - detailmessage
          - page_no
          - device_info
          - clientIP

# server graceful 추가
server:
  shutdown: graceful
  port: 8443  # HTTPS 메인포트


  # SSL/TLS 설정
  ssl:
    enabled: true
    key-store: classpath:keystore.p12
    key-store-password: ${SSL_KEYSTORE_PASSWORD:changeit}
    key-store-type: PKCS12
    key-alias: localhost

    # 보안 프로토콜 설정
    protocol: TLS
    enabled-protocols: TLSv1.2,TLSv1.3

    # Cipher Suite 설정 (강력한 암호화만 허용)
    ciphers:
      - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
      - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
      - TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
      - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256

    # 클라이언트 인증 (필요시 활성화)
    # client-auth: need  # none, want, need 중 선택

  # HTTP/2 활성화 - 프로토콜 레벨 최적화
  # 효과: 멀티플렉싱, 헤더 압축(HPACK), 서버 푸시
  # HTTPS가 필수이므로 SSL 설정과 함께 사용
  http2:
    enabled: true

  # Response Body 압축 설정 - 데이터 전송량 최적화
  # 효과: JSON, HTML 등 텍스트 기반 응답을 70-90% 압축
  # HTTP/2의 헤더 압축과는 별개로 본문(body)을 압축
  compression:
    enabled: true
    mime-types:
      - text/html
      - text/xml
      - text/plain
      - text/css
      - text/javascript
      - application/javascript
      - application/json
      - application/xml
    min-response-size: 1024